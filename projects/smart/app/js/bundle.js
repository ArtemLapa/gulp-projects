(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var menuBtn = document.querySelector('.header__menu-btn'),
    navMenuWrapper = document.querySelector('.header__navigation-menu-wrapper');
menuBtn.addEventListener('click', function (event) {
  event.preventDefault;
  menuBtn.classList.toggle('header__menu-btn--active');
  navMenuWrapper.classList.toggle('header__navigation-menu-wrapper--active');
});
var swiper = new Swiper('.swiper-container', {
  slidesPerView: 1,
  spaceBetween: 20,
  direction: 'horizontal',
  loop: true,
  arrows: true,
  centeredSlides: true,
  pagination: {
    el: '.swiper-pagination',
    type: 'fraction'
  },
  navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev'
  },
  scrollbar: {
    el: '.swiper-scrollbar'
  },
  breakpoints: {
    640: {
      slidesPerView: 2,
      spaceBetween: 20
    },
    1024: {
      slidesPerView: 2,
      spaceBetween: 40 // slidesPerGroup: 1,

    },
    1440: {
      slidesPerView: 3,
      spaceBetween: 70
    }
  }
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
